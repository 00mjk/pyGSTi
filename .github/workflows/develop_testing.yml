# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: ["*"]
    branches-ignore: [ master, beta ]
  pull_request:
    branches: ["*"]
    branches-ignore: [ master, beta ]
  # Allow running manually from Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]

    env:
      SKIP_DEAP: 1
      NOSE_VERBOSE: 2
      NOSE_WITH_TIMER: 1
      NOSE_WITH_ID: 1
      NOSE_REDNOSE: 1
      NOSE_WITH_COVERAGE: 1
      NOSE_COVER_PACKAGE: "pygsti"
      NOSE_PROCESSES: -1
      NOSE_NOPATH: 1 # use installed package, not source tree under CWD
      NOSE_PROCESS_TIMEOUT: 2400
      NOSE_WHERE: "test/unit/"

    steps:
    - uses: actions/checkout@v2
    - name: Set up installation environment
      run: |
        ./.github/ci-scripts/before_install.sh
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install package
      # see https://github.com/cvxgrp/cvxpy/issues/968 for numpy version
      # Cython must be pre-installed to build native extensions on pyGSTi install
      run: |
        python -m pip install --upgrade pip
        python -m pip install "numpy>=1.16.0"
        python -m pip install cython
        python -m pip install .[testing]
        python -m pip freeze
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run unit tests
      run: |
        python -Ic "import pygsti; print(pygsti.__version__); print(pygsti.__path__)"
        echo "nosetests $NOSETESTS"
        nosetests $NOSETESTS
