# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Testing develop branches

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]
  # Allow running manually from Actions tab
  workflow_dispatch:

env:
  SKIP_DEAP: 1
  NOSE_VERBOSE: 2
  NOSE_WITH_TIMER: 1
  NOSE_WITH_ID: 1
  NOSE_REDNOSE: 1
  NOSE_WITH_COVERAGE: 1
  NOSE_COVER_PACKAGE: "pygsti"
  NOSE_PROCESSES: -1
  NOSE_NOPATH: 1 # use installed package, not source tree under CWD
  NOSE_PROCESS_TIMEOUT: 2400
  NOSE_WHERE: "test/unit/"

jobs:
  build:

    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up installation environment
      run: |
        ./.github/ci-scripts/before_install.sh
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip packages
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install package
      run: |
        python -m pip install --upgrade pip
        # see https://github.com/cvxgrp/cvxpy/issues/968 for numpy version
        python -m pip install "numpy>=1.16.0"
        # Cython must be pre-installed to build native extensions on pyGSTi install
        python -m pip install cython
        python -m pip install wheel flake8
        python -m pip install .[testing]
        python -m pip freeze
    - name: Lint with flake8
      run: |
        # Critical errors, exit on failure
        flake8 . --count --show-source --statistics --config=.flake8-critical
        # Standard PEP8, allowed to fail since exit-zero treats all errors as warnings
        flake8 . --exit-zero --statistics
    - name: Run unit tests
      run: |
        python -Ic "import pygsti; print(pygsti.__version__); print(pygsti.__path__)"
        echo "nosetests $NOSETESTS"
        nosetests $NOSETESTS
    - name: Push changes to feature-github-action-push branch
      uses: ad-m/github-push-action@v0.6.0
      if: github.ref == 'refs/heads/feature-github-actions'
      with:
        branch: 'refs/heads/feature-github-action-push'
        github_token: ${{ secrets.PYGSTI_TOKEN }}



