# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Deploy on test.pypi.org

on:
  push:
    branches: [ "feature-tutorial-evotype-fixes" ]  # for initial testing

  # Allow running manually from Actions tab
  workflow_dispatch:


jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
  
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Use deployment pyproject.toml
        run: |
          pwd
          rm pyproject.toml
          mv pyproject.toml.fordeploy pyproject.toml
  
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.1.2
        env:
          CIBW_BUILD: cp36-* cp37-* cp38-* cp39-*
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BEFORE_ALL_LINUX: ./.github/ci-scripts/before_install.sh
          # CIBW_BEFORE_BUILD_LINUX: mv pyproject.toml.fordeploy pyproject.toml
          #   #OLD ./.github/ci-scripts/install-wheelbuilding-deps.sh
          # CIBW_BEFORE_BUILD_MACOS: mv pyproject.toml.fordeploy pyproject.toml
          # CIBW_BEFORE_BUILD_WINDOWS: mv pyproject.toml.fordeploy pyproject.toml
          #  python -m pip install "numpy>=1.16.0" && 
          #  python -m pip install cython && 
          #  python -m pip install wheel flake8

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    #if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
