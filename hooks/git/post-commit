#!/usr/bin/python
from __future__       import print_function
from automation_tools import get_branchname, run_pylint, get_output, directory
from hooksettings     import generates_pylint_report, updates_git_pages
import subprocess, os, sys

if __name__ == '__main__':

    branchname = get_branchname()

    if branchname in generates_pylint_report:
        run_pylint(['./lint.py', '--score'])

    # Only reindent if there are no unstaged files
    numChanged = len(get_output(['git', 'diff', '--name-only']).splitlines())
    if numChanged == 0:
        # Reindent
        try:
            subprocess.call(['reindent', '-r', '-n', 'packages', 'test'])
            # Check if anything changed during our reindent
            numChanged = len(get_output(['git', 'diff', '--name-only']).splitlines())
            if numChanged > 0:
                subprocess.call(['git', 'add', '-u'])
                subprocess.call(['git', 'commit', '--no-verify', '--amend', '--no-edit'])
                print('Reindentation finished, commit amended')
        except Exception as e:
            print(e)
            print('Is reindent installed alongside python?\n' +
                  'On ubuntu/debian, try: apt-get install python-examples')
    else:
        print('Some files are still unstaged, automatic reindent (whitespace fix) aborted')

    with open(os.devnull, 'w') as FNULL:
        with directory('test'):
            print('Generating pylint report in background process. Checkout test/output/ in about a minute')
            subprocess.Popen(['./lint.py', '--score'], stdout=FNULL, stderr=FNULL) # Generate score, hope it doesn't hang

    with open(os.devnull, 'w') as FNULL:
        with directory('test'):
            subprocess.Popen(['./lint.py', '--score'], stdout=FNULL, stderr=FNULL) # Generate score, hope it doesn't hang

    if branchname in updates_git_pages:
        print('Updating github pages!')
        subprocess.call(['bash', '.git/hooks/create_git_html']) 
        subprocess.call(['git', 'checkout', 'gh-pages'])
        os.system('cp temp_html/*.html tutorials/')
        subprocess.call(['git', 'add', 'tutorials/*.html'])
        subprocess.call(['git', 'commit', '-m', '"Updates html in tutorials"'])
        subprocess.call(['git', 'push'])
        subprocess.call(['git', 'checkout', branchname])
        os.system('rm -rf temp_html') # yikes!

    sys.exit(0)



