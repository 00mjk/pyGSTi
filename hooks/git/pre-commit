#!/usr/bin/python
from __future__       import print_function
from automation_tools import get_branchname, run_pylint, read_yaml, get_author
from hooksettings     import requires_pylint_pass
import subprocess, os, sys

if __name__ == '__main__':
    branchname = get_branchname()
    if branchname in requires_pylint_pass:
        # Compare current pylint score against that in pylint/config.yml
        passes = run_pylint(['./score.py']) 
        sys.exit(int(passes))

    output = subprocess.check_output(['git', 'fetch'])
    output = output.decode('utf-8')
    print(output)
    output = output.splitlines()
    if len(output) > 0: # If updates exist..
        fetch  = [line for line in output if branchname in line][0] # first line with branchname
        SHA    = fetch.rsplit('.', 1)[1].split()[0]

        # Force update the permissions file!
        # git checkout -m <revision> <yourfilepath>
        subprocess.call(['git', 'checkout' 'HEAD', '--', 'hooks/etc/permissions.yml'])
        subprocess.call(['git', 'checkout', '-m', '-f', SHA, 'hooks/etc/permissions.yml'])
        subprocess.call(['git', 'commit', 'hooks/etc/permissions.yml'])

    # Check branch permissions
    permissions = read_yaml('hooks/etc/permissions.yml')
    allowed     = permissions[branchname]
    if allowed != 'all' and 'all' not in allowed:
        print('(%s) are allowed to commit to current branch %s' % (', '.join(allowed), branchname))
        author, _   = get_author()
        print('You are: %s' % author)
        if author in allowed:
            print('Please continue..')
        else:
            print('You don\'t have correct permissions on %s' % branchname)
            sys.exit(1)
    else:
        print('No permissions restrictions on %s' % branchname)

    sys.exit(0)

