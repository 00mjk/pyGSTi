#!/usr/bin/env python
from __future__ import print_function
import subprocess, sys, os

print('Travis CI Passed')

branchname = 'unspecified'
output     = subprocess.check_output(['git', 'branch'])
branches   = output.decode('utf-8').splitlines()
for branch in branches:
    if '*' in branch:
        branchname = branch.replace('*', '')
        branchname = branchname.replace(')', '')
        if branchname.count(' ') > 0:
            branchname = branchname.split()[-1]
        break


# Relevant:
# http://stackoverflow.com/questions/501407/is-there-a-git-merge-dry-run-option

# Attempt to auto-merge develop into pre-beta if travis tests pass
# This code is currently unactive, but should work :)

print(branchname)

subprocess.call(['git', 'remote', 'add', 'origin', 'https://github.com/pyGSTio/pyGSTi.git']) # Can't get branches from origin if we don't know what origin is

# Get the SHA of our local develop
output = subprocess.check_output(['git', 'log', 'HEAD', '-1'])
devSHA = output.decode('utf-8').split()[1]

subprocess.call(['git', 'stash'])
subprocess.call(['git', 'fetch', 'origin', 'beta'])
subprocess.call(['git', 'checkout', '-b', 'beta', 'origin/beta'])
subprocess.call(['git', 'pull'])
hexOut = subprocess.check_output(['git',
                                  'merge-base',
                                  branchname,   # OUR version of develop
                                  'beta']    )
hexID  = hexOut.decode('utf-8').replace('\n', '')
output = subprocess.check_output(['git',
                                  'merge-tree',
                                  hexID,
                                  'beta',
                                  branchname]) # View merge tree between beta and (our) develop
output = output.decode('utf-8', 'ignore')
print(output)
canMerge = '<<<<<' not in output

if canMerge:
    print('Merge of develop into beta is possible..')
    # The below code is active, but only for testing
    subprocess.call(['git', 'merge', 'develop']) #into beta
    subprocess.call(['git', 'commit', '--no-verify', '-m', 'Merged develop into beta, as there were no conflicts and travis tests passed'])

    PUSHKEY  = os.environ['PUSHKEY']
    push_uri = 'https://%s@github.com/pyGSTio/pyGSTi.git' % PUSHKEY # yikes
    try:
        with open(os.devnull, 'w') as FNULL:
            result = subprocess.call(['git', 'push', push_uri, 'beta'], stdout=FNULL, stderr=FNULL)
            if result != 0:
                print('Secure push failed')
    except:
        print('Secure push failed')

else:
    print('Potential merge conflicts found! Cannot merge beta into develop')

