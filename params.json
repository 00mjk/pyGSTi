{"name":"Pygsti","tagline":"A python implementation of Gate Set Tomography","body":"<img src=\"pyGSTi_icon.png\" alt=\"pyGSTi icon\" style=\"width: 100px;\"/>\r\n\r\n##Getting Started\r\n\r\n**pyGSTi** is a software package to perform gate set tomography (GST).  GST is a kind of quantum tomography, and it provides full characterization of quantum logic gates on quantum devices such as qubits.  For a basic (albeit out of date) introduction to GST, see <http://arxiv.org/abs/1310.4492> (by the GST authors) or <http://arxiv.org/abs/1509.02921> (by an independent 3rd party).  These papers describe a relatively primitive implementation of GST (compared to what’s available in pyGSTi).  Major upgrades in pyGSTi include higher accuracy (from the analysis of long gate sequences) and automatic generation of detailed reports. \r\n\r\npyGSTi is written entirely in Python, so there's no compiling necessary.\r\nThe first step is to install **Python** and **iPython notebook** (if they aren't\r\ninstalled already).  In order to use pyGSTi you need to\r\ntell your python distribution where pyGSTi lives, which can be done in one\r\n of two ways:\r\n\r\n1. run: `python install_locally.py` \r\n\r\n  This adds the current pyGSTi path to Python's list of search paths, and\r\n  doesn't required administrative access (but only applies to the current user).\r\n\r\n2. run: `python setup.py install`\r\n\r\n  This installs the pyGSTi package into one of the Python distribution's\r\n  search directories.  This typically requires administrative privileges, and\r\n  is the way most Python packages are installed.  Installing this way has the\r\n  advantage that it makes the package available to all users and then allows \r\n  you to move or delete the directory you're installing from.\r\n\r\n  The reason why you may *not* want to use this installation method is that \r\n  pyGSTi comes with (iPython notebook) tutorials that you may want to access.\r\n  If you're keeping the tutorial files somewhere in your local user\r\n  directories, you may want to just place the entire pyGSTi directory there\r\n  using option (1) above.\r\n\r\nAfter you've installed pyGSTi, you should be able to \r\n`import pygsti` in Python or an iPython notebook.  The next step is to take a look at\r\nthe tutorials.  To do this:\r\n\r\n- change to the notebook directory, by running:\r\n  `cd ipython_notebooks`  \r\n\r\n- start up the iPython notebook server by running:\r\n  `ipython notebook`\r\n\r\nThe iPython server should open up your web browser to the server root.\r\nFrom there, you can navigate to the \"Tutorials\" folder and start the \r\nfirst tutorial notebook, “00 Quick and easy GST”.  If you're new to iPython\r\nnotebook, note that the key command to execute\r\na cell within a notebook is \\<Shift+Enter\\>, not just \\<Enter\\>.  Static HTML versions\r\nof these tutorials are linked to in the \"Tutorials\" section below.\r\n\r\n**Congratulations!  You're up and running with pyGSTi!**\r\n\r\n## Tutorials\r\nBelow is a list of tutorials for getting started with pyGSTi.  These are HTML versions of\r\nthe tutorials you can run interactively from iPython notebook after installing\r\npyGSTi (see above).  We've converted them to HTML and made them available here both to serve\r\nas a reference and so you can see pyGSTi in action before you (or without needing to) install it.\r\n\r\n0. [Quick and easy GST](tutorials/00%20Quick%20and%20easy%20GST.html)  Get started with pyGSTi\r\n   using the high-level interface.  This may be the only tutorial many users will need.  \r\n1. [Gate sets](tutorials/01%20GateSets.html)  Covers the `GateSet` object and related functions.\r\n2. [Gate strings](tutorials/02%20Gatestring%20lists.html) Covers the `GateString` object and related functions, specifically how to make lists of gate strings.\r\n3. [Data sets](tutorials/03%20DataSets.html) Covers construction and use of `DataSet` objects.\r\n4. [Algorithms](tutorials/04%20Algorithms.html) How to invoke pyGSTi's algorithms (at a lower level than in the first tutorial).\r\n5. [Making Plots](tutorials/05%20Analysis.html)  Shows how to construct various types of plots from a GST estimate.\r\n6. [Advanced: Algorithms](tutorials/06%20Advanced%20Algorithms.html)  An advanced and *incomplete* tutorial showing how to use some of pyGSTi's model selection routines. \r\n7. [Generating Reports](tutorials/07%20Report%20Generation.html) Covers how to generate reports from a GST estimate.\r\n8. [Advanced: Fiducial Reduction](tutorials/08%20Fiducial%20Reduction.html)  An advanced tutorial demonstrating fiducial-pair-reduction. \r\n9. [Advanced: Bootstrapped Error Bars](tutorials/09%20Boostrapped%20Error%20Bars.html)  An advanced tutorial which constructs error bars on a GST estimate using parametric and non-parametric bootstrapping.\r\n\r\n## Documentation\r\nDetailed documentation of the pyGSTi code (automatically generated from \r\nthe source code's docstrings) can be found [here](http://www.pygsti.info/doc/index.html).\r\nThese pages provide a searchable reference for just about everything pyGSTi can do.  Please\r\nlet us know if you find any errors.\r\n\r\n## Online web-based GST tool\r\nDon't want to go through all the trouble of installing pyGSTi (even though it's really not that much trouble)?  We've setup a simple online tool where, if you just want to run plain vanilla 1-qubit GST on some data, you can!  First we need to set up an account for you. We hope to automate this in the future, but for now you need to email us at pygsti@sandia.gov. We'll send you an email with a link to the online tool and credentials to login; from there you can download a template data file, fill it with data, upload it back to the site, and run GST.  It's like taking candy from a baby...\r\n\r\n## License\r\npyGSTi free software, licensed under the Apache License Version 2.0.\r\n\r\n\r\n## Questions?\r\nFor help and support with pyGSTi, please contact the authors at\r\npygsti@sandia.gov.","google":"UA-21066806-3","note":"Don't delete this file! It's used internally to help with page regeneration."}
